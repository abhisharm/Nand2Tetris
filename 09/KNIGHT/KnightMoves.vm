function KnightMoves.initialize 1
push constant 8
call Array.new 1
pop static 0
push constant 2
call Array.new 1
pop local 0
push constant 0
push local 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 0
add
push constant 2
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
push static 0
add
push local 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
call Array.new 1
pop local 0
push constant 0
push local 0
add
push constant 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 0
add
push constant 1
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push static 0
add
push local 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
call Array.new 1
pop local 0
push constant 0
push local 0
add
push constant 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push static 0
add
push local 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
call Array.new 1
pop local 0
push constant 0
push local 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 0
add
push constant 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push static 0
add
push local 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
call Array.new 1
pop local 0
push constant 0
push local 0
add
push constant 1
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 0
add
push constant 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 4
push static 0
add
push local 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
call Array.new 1
pop local 0
push constant 0
push local 0
add
push constant 2
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 5
push static 0
add
push local 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
call Array.new 1
pop local 0
push constant 0
push local 0
add
push constant 2
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 0
add
push constant 1
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 6
push static 0
add
push local 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
call Array.new 1
pop local 0
push constant 0
push local 0
add
push constant 1
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 0
add
push constant 2
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 7
push static 0
add
push local 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function KnightMoves.new 1
push constant 1
call Memory.alloc 1
pop pointer 0
push constant 0
pop local 0
push constant 8
call Array.new 1
pop this 0
label WHILE_EXP0
push local 0
push constant 8
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push pointer 0
return
function KnightMoves.disposeOrderedPossibleMoves 2
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 8
lt
not
if-goto WHILE_END0
push local 0
push static 0
add
pop pointer 1
push that 0
pop local 1
push local 1
call Array.dispose 1
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push static 0
call Array.dispose 1
pop temp 0
push constant 0
return
function KnightMoves.disposeAvailableMoves 2
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 8
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
pop pointer 1
push that 0
pop local 1
push local 1
call Array.dispose 1
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push this 0
call Array.dispose 1
pop temp 0
push constant 0
return
function KnightMoves.dispose 0
push argument 0
pop pointer 0
push pointer 0
call KnightMoves.disposeOrderedPossibleMoves 1
pop temp 0
push pointer 0
call KnightMoves.disposeAvailableMoves 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function KnightMoves.setAvailableMovesForCoordinates 3
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 8
lt
not
if-goto WHILE_END0
push local 0
push static 0
add
pop pointer 1
push that 0
pop local 1
push argument 1
push constant 0
push local 1
add
pop pointer 1
push that 0
add
push constant 8
lt
push argument 1
push constant 0
push local 1
add
pop pointer 1
push that 0
add
push constant 0
lt
not
and
push argument 2
push constant 1
push local 1
add
pop pointer 1
push that 0
add
push constant 8
lt
and
push argument 2
push constant 1
push local 1
add
pop pointer 1
push that 0
add
push constant 0
lt
not
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push this 0
add
push constant 0
not
pop temp 0
pop pointer 1
push temp 0
pop that 0
goto IF_END0
label IF_FALSE0
push local 0
push this 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_END0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function KnightMoves.isValidMove 0
push argument 0
pop pointer 0
push argument 1
push constant 8
gt
push argument 1
push constant 0
lt
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push argument 1
push this 0
add
pop pointer 1
push that 0
return
function KnightMoves.getMoveOffset 0
push argument 0
pop pointer 0
push argument 1
push static 0
add
pop pointer 1
push that 0
return
function KnightMoves.getOrderedMoves 0
push argument 0
pop pointer 0
push static 0
return
function KnightMoves.getAvailableMoves 0
push argument 0
pop pointer 0
push this 0
return
