class TestDrawing {
  constructor TestDrawing new() {
    return this;
  }

  function void drawKnight(int location) {
    var int memAddress;
  	let memAddress = 16384+location;
  	do Memory.poke(memAddress+0, 384);
  	do Memory.poke(memAddress+32, 832);
  	do Memory.poke(memAddress+64, 1824);
  	do Memory.poke(memAddress+96, 1808);
  	do Memory.poke(memAddress+128, 3880);
  	do Memory.poke(memAddress+160, 3332);
  	do Memory.poke(memAddress+192, 6402);
  	do Memory.poke(memAddress+224, 4361);
  	do Memory.poke(memAddress+256, 287);
  	do Memory.poke(memAddress+288, 304);
  	do Memory.poke(memAddress+320, 288);
  	do Memory.poke(memAddress+352, 288);
  	do Memory.poke(memAddress+384, 288);
  	do Memory.poke(memAddress+416, 16191);
  	do Memory.poke(memAddress+448, 8193);
  	do Memory.poke(memAddress+480, 16383);
  	return;
  }

  method void dispose() {
    do Memory.deAlloc(this);
    return;
  }

  method void drawboard() {
    var int x;
    var int y;    
    var int location;
    let x = 128;
    let y = 256;
    let location = 0;
    do TestDrawing.drawKnight(location);
    return;
  }

  method void run() {
    var char key;
    var bool exit;
    let exit = false;

    while(~exit) {
      do drawboard();      
      while (key = 0) {
        let key = Keyboard.keyPressed();
      }
      if (key = 81) { let exit = true; }
    } // while
    return;
  }
}
